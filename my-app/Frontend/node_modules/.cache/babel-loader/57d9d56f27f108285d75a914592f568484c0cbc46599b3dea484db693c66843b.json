{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/context/usercontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport function UserProvider({\n  children\n}) {\n  _s();\n  const [role, setRole] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"user\");\n    setRole(null);\n    setUser(null);\n    navigate(\"/login\");\n  }, [navigate]);\n  useEffect(() => {\n    const storedRole = localStorage.getItem(\"role\");\n    const storedUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"token\");\n    if (storedRole) setRole(storedRole);\n    if (storedUser) setUser(JSON.parse(storedUser));\n    if (token) {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      const exp = payload.exp * 1000;\n      const now = Date.now();\n      if (now >= exp) {\n        logout();\n      } else {\n        const timeout = setTimeout(() => {\n          logout();\n          alert(\"Your session has expired.\");\n        }, exp - now);\n        return () => clearTimeout(timeout);\n      }\n    }\n  }, [logout]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      role,\n      setRole,\n      user,\n      setUser,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"TKxrpvMRnN/PLD6rjGICLN/Q13o=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","role","setRole","user","setUser","navigate","logout","localStorage","removeItem","storedRole","getItem","storedUser","token","JSON","parse","payload","atob","split","exp","now","Date","timeout","setTimeout","alert","clearTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/context/usercontext.js"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UserContext = createContext();\n\nexport function UserProvider({ children }) {\n  const [role, setRole] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"user\");\n    setRole(null);\n    setUser(null);\n    navigate(\"/login\");\n  }, [navigate]);\n\n  useEffect(() => {\n    const storedRole = localStorage.getItem(\"role\");\n    const storedUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"token\");\n\n    if (storedRole) setRole(storedRole);\n    if (storedUser) setUser(JSON.parse(storedUser));\n\n    if (token) {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      const exp = payload.exp * 1000;\n      const now = Date.now();\n\n      if (now >= exp) {\n        logout();\n      } else {\n        const timeout = setTimeout(() => {\n          logout();\n          alert(\"Your session has expired.\");\n        }, exp - now);\n\n        return () => clearTimeout(timeout);\n      }\n    }\n  }, [logout]);\n\n  return (\n    <UserContext.Provider value={{ role, setRole, user, setUser, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport const useUser = () => useContext(UserContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,WAAW,QACN,OAAO;AACd,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASS,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,MAAM,GAAGb,WAAW,CAAC,MAAM;IAC/Bc,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BN,OAAO,CAAC,IAAI,CAAC;IACbE,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEdb,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAGF,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,UAAU,GAAGJ,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAME,KAAK,GAAGL,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAID,UAAU,EAAEP,OAAO,CAACO,UAAU,CAAC;IACnC,IAAIE,UAAU,EAAEP,OAAO,CAACS,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,CAAC;IAE/C,IAAIC,KAAK,EAAE;MACT,MAAMG,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACE,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,MAAMC,GAAG,GAAGH,OAAO,CAACG,GAAG,GAAG,IAAI;MAC9B,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;MAEtB,IAAIA,GAAG,IAAID,GAAG,EAAE;QACdZ,MAAM,CAAC,CAAC;MACV,CAAC,MAAM;QACL,MAAMe,OAAO,GAAGC,UAAU,CAAC,MAAM;UAC/BhB,MAAM,CAAC,CAAC;UACRiB,KAAK,CAAC,2BAA2B,CAAC;QACpC,CAAC,EAAEL,GAAG,GAAGC,GAAG,CAAC;QAEb,OAAO,MAAMK,YAAY,CAACH,OAAO,CAAC;MACpC;IACF;EACF,CAAC,EAAE,CAACf,MAAM,CAAC,CAAC;EAEZ,oBACEV,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEC,OAAO;MAAEC,IAAI;MAAEC,OAAO;MAAEE;IAAO,CAAE;IAAAP,QAAA,EACnEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC9B,EAAA,CA7CeF,YAAY;EAAA,QAGTJ,WAAW;AAAA;AAAAqC,EAAA,GAHdjC,YAAY;AA+C5B,OAAO,MAAMkC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM3C,UAAU,CAACO,WAAW,CAAC;AAAA;AAACoC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}