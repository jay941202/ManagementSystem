{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPA.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport API from \"../../API/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CPA() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [dates, setDates] = useState([]);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      const token = localStorage.getItem(\"token\");\n      const res = await API.get(\"/employee/employeeList\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(res.data);\n    };\n    fetchEmployees();\n  }, []);\n  useEffect(() => {\n    const start = new Date(\"2025-08-01\");\n    const end = new Date(\"2025-08-30\");\n    const arr = [];\n    let current = new Date(start);\n    while (current <= end) {\n      arr.push(new Date(current));\n      current.setDate(current.getDate() + 1);\n    }\n    setDates(arr);\n  }, []);\n  const chunkDates = (arr, size) => {\n    const chunks = [];\n    for (let i = 0; i < arr.length; i += size) chunks.push(arr.slice(i, i + size));\n    return chunks;\n  };\n  const dateChunks = chunkDates(dates, 15);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-full overflow-auto space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center text-gray-800\",\n      children: \"CPA Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dateChunks.map((chunkDates, idx) => /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-max w-full border-collapse mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"sticky top-0 bg-gray-100 z-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              rowSpan: 3,\n              className: \"border px-3 py-2 bg-gray-200 text-left text-sm font-semibold\",\n              children: emp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              rowSpan: 3,\n              className: \"border px-3 py-2 bg-gray-200 text-left text-sm font-semibold\",\n              children: [\"$\", emp.hourlyPay]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), chunkDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 4,\n              className: \"border px-3 py-2 bg-gray-50 text-center text-sm font-semibold\",\n              children: [date.getMonth() + 1, \"/\", date.getDate()]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: chunkDates.map(date => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: 2,\n                className: \"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\",\n                children: \"AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: 2,\n                className: \"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\",\n                children: \"PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: chunkDates.map(date => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\",\n                children: \"Hourly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\",\n                children: \"Tip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\",\n                children: \"Hourly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\",\n                children: \"Tip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: chunkDates.map(date => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 23\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, emp._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CPA, \"ZR+sYaP3k0BVDfY8E32D8iwkbvI=\");\n_c = CPA;\nvar _c;\n$RefreshReg$(_c, \"CPA\");","map":{"version":3,"names":["React","useState","useEffect","API","jsxDEV","_jsxDEV","CPA","_s","employees","setEmployees","dates","setDates","fetchEmployees","token","localStorage","getItem","res","get","headers","Authorization","data","start","Date","end","arr","current","push","setDate","getDate","chunkDates","size","chunks","i","length","slice","dateChunks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","emp","idx","rowSpan","name","hourlyPay","date","colSpan","getMonth","Fragment","_id","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPA.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport API from \"../../API/api\";\n\nexport default function CPA() {\n  const [employees, setEmployees] = useState([]);\n  const [dates, setDates] = useState([]);\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      const token = localStorage.getItem(\"token\");\n      const res = await API.get(\"/employee/employeeList\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setEmployees(res.data);\n    };\n    fetchEmployees();\n  }, []);\n\n  useEffect(() => {\n    const start = new Date(\"2025-08-01\");\n    const end = new Date(\"2025-08-30\");\n    const arr = [];\n    let current = new Date(start);\n    while (current <= end) {\n      arr.push(new Date(current));\n      current.setDate(current.getDate() + 1);\n    }\n    setDates(arr);\n  }, []);\n\n  const chunkDates = (arr, size) => {\n    const chunks = [];\n    for (let i = 0; i < arr.length; i += size)\n      chunks.push(arr.slice(i, i + size));\n    return chunks;\n  };\n\n  const dateChunks = chunkDates(dates, 15);\n\n  return (\n    <div className=\"p-6 max-w-full overflow-auto space-y-8\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">\n        CPA Report\n      </h2>\n      {employees.map((emp) => (\n        <div key={emp._id}>\n          {dateChunks.map((chunkDates, idx) => (\n            <table key={idx} className=\"min-w-max w-full border-collapse mb-6\">\n              <thead className=\"sticky top-0 bg-gray-100 z-10\">\n                <tr>\n                  <th\n                    rowSpan={3}\n                    className=\"border px-3 py-2 bg-gray-200 text-left text-sm font-semibold\"\n                  >\n                    {emp.name}\n                  </th>\n                  <th\n                    rowSpan={3}\n                    className=\"border px-3 py-2 bg-gray-200 text-left text-sm font-semibold\"\n                  >\n                    ${emp.hourlyPay}\n                  </th>\n                  {chunkDates.map((date) => (\n                    <th\n                      key={date}\n                      colSpan={4}\n                      className=\"border px-3 py-2 bg-gray-50 text-center text-sm font-semibold\"\n                    >\n                      {date.getMonth() + 1}/{date.getDate()}\n                    </th>\n                  ))}\n                </tr>\n                <tr>\n                  {chunkDates.map((date) => (\n                    <React.Fragment key={date}>\n                      <th\n                        colSpan={2}\n                        className=\"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\"\n                      >\n                        AM\n                      </th>\n                      <th\n                        colSpan={2}\n                        className=\"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\"\n                      >\n                        PM\n                      </th>\n                    </React.Fragment>\n                  ))}\n                </tr>\n                <tr>\n                  {chunkDates.map((date) => (\n                    <React.Fragment key={date}>\n                      <th className=\"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\">\n                        Hourly\n                      </th>\n                      <th className=\"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\">\n                        Tip\n                      </th>\n                      <th className=\"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\">\n                        Hourly\n                      </th>\n                      <th className=\"border px-2 py-1 bg-gray-50 text-center text-xs font-medium\">\n                        Tip\n                      </th>\n                    </React.Fragment>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  {chunkDates.map((date) => (\n                    <React.Fragment key={date}>\n                      <td className=\"border px-2 py-1\">{/* AM Hourly */}</td>\n                      <td className=\"border px-2 py-1\">{/* AM Tip */}</td>\n                      <td className=\"border px-2 py-1\">{/* PM Hourly */}</td>\n                      <td className=\"border px-2 py-1\">{/* PM Tip */}</td>\n                    </React.Fragment>\n                  ))}\n                </tr>\n              </tbody>\n            </table>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}