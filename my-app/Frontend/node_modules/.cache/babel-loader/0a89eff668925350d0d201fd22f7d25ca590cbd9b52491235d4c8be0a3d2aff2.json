{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ScheduleCell from \"./Scedule Components/ScheduleCell\";\nimport API from \"../../API/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const today = new Date();\n  const todayDay = today.getDay();\n  const diffToMonday = todayDay === 0 ? -6 : 1 - todayDay;\n  const startDateObj = new Date(today);\n  startDateObj.setDate(today.getDate() + diffToMonday);\n  const printedDays = [];\n  for (let i = 0; i < 21; i++) {\n    const date = new Date(startDateObj);\n    date.setDate(startDateObj.getDate() + i);\n    printedDays.push({\n      dateObj: date\n    });\n  }\n  const [schedule, setSchedule] = useState({});\n  const [employeesList, setEmployeesList] = useState([]);\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await API.get(\"/schedule/list\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const mappedSchedule = {};\n        res.data.forEach(item => {\n          const dateObj = new Date(item.date);\n          const key = `${dateObj.getMonth() + 1}/${dateObj.getDate()}`;\n          const mapShift = shiftData => {\n            if (!shiftData) return {\n              employees: [],\n              scheduleConfirmed: false\n            };\n            return {\n              employees: shiftData.employees.map(e => e.employee),\n              scheduleConfirmed: shiftData.scheduleConfirmed || false\n            };\n          };\n          mappedSchedule[key] = {\n            AM: mapShift(item.AM),\n            PM: mapShift(item.PM)\n          };\n        });\n        setSchedule(mappedSchedule);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchSchedule();\n  }, []);\n  const handleChange = (dateStr, shift, selectedEmployees) => {\n    setSchedule(prev => {\n      const dayData = prev[dateStr] || {\n        AM: {\n          employees: [],\n          scheduleConfirmed: false\n        },\n        PM: {\n          employees: [],\n          scheduleConfirmed: false\n        }\n      };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...dayData[shift],\n            employees: selectedEmployees\n          }\n        }\n      };\n    });\n  };\n  const handleEdit = (dateStr, shift) => {\n    setSchedule(prev => {\n      const dayData = prev[dateStr] || {};\n      const shiftData = dayData[shift] || {\n        employees: []\n      };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...shiftData,\n            scheduleConfirmed: false\n          }\n        }\n      };\n    });\n  };\n  const handleConfirm = async (dateStr, shift) => {\n    setSchedule(prev => {\n      const dayData = prev[dateStr] || {};\n      const shiftData = dayData[shift] || {\n        employees: []\n      };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...shiftData,\n            scheduleConfirmed: true\n          }\n        }\n      };\n    });\n    try {\n      var _schedule$dateStr, _schedule$dateStr$shi;\n      const token = localStorage.getItem(\"token\");\n      const selectedEmployees = ((_schedule$dateStr = schedule[dateStr]) === null || _schedule$dateStr === void 0 ? void 0 : (_schedule$dateStr$shi = _schedule$dateStr[shift]) === null || _schedule$dateStr$shi === void 0 ? void 0 : _schedule$dateStr$shi.employees) || [];\n      const formattedEmployees = selectedEmployees.map(emp => ({\n        employee: emp._id,\n        clockIn: null,\n        clockOut: null\n      }));\n      await API.post(\"/schedule/confirm\", {\n        date: dateStr,\n        shift,\n        employees: formattedEmployees\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (err) {\n      console.error(\"Schedule confirm failed:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center\",\n      children: \"Scheduler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-4 text-center text-sm font-bold text-gray-1000 mb-4\",\n      children: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-3 bg-gray-100 rounded-md shadow-sm\",\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-4 text-sm\",\n      children: printedDays.map(({\n        dateObj\n      }, index) => {\n        const dateStr = `${dateObj.getMonth() + 1}/${dateObj.getDate()}`;\n        const dayData = schedule[dateStr] || {};\n        return /*#__PURE__*/_jsxDEV(ScheduleCell, {\n          dateStr: dateStr,\n          dayData: dayData,\n          handleChange: handleChange,\n          handleConfirm: handleConfirm,\n          handleEdit: handleEdit\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Schedule, \"nc/NsiFtnbrt7Xq9hMnYwji5thg=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","ScheduleCell","API","jsxDEV","_jsxDEV","Schedule","_s","today","Date","todayDay","getDay","diffToMonday","startDateObj","setDate","getDate","printedDays","i","date","push","dateObj","schedule","setSchedule","employeesList","setEmployeesList","fetchSchedule","token","localStorage","getItem","res","get","headers","Authorization","mappedSchedule","data","forEach","item","key","getMonth","mapShift","shiftData","employees","scheduleConfirmed","map","e","employee","AM","PM","err","console","error","handleChange","dateStr","shift","selectedEmployees","prev","dayData","handleEdit","handleConfirm","_schedule$dateStr","_schedule$dateStr$shi","formattedEmployees","emp","_id","clockIn","clockOut","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","d","index","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/Schedule.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ScheduleCell from \"./Scedule Components/ScheduleCell\";\nimport API from \"../../API/api\";\n\nexport default function Schedule() {\n  const today = new Date();\n  const todayDay = today.getDay();\n  const diffToMonday = todayDay === 0 ? -6 : 1 - todayDay;\n\n  const startDateObj = new Date(today);\n  startDateObj.setDate(today.getDate() + diffToMonday);\n\n  const printedDays = [];\n  for (let i = 0; i < 21; i++) {\n    const date = new Date(startDateObj);\n    date.setDate(startDateObj.getDate() + i);\n    printedDays.push({ dateObj: date });\n  }\n\n  const [schedule, setSchedule] = useState({});\n  const [employeesList, setEmployeesList] = useState([]);\n\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await API.get(\"/schedule/list\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const mappedSchedule = {};\n        res.data.forEach((item) => {\n          const dateObj = new Date(item.date);\n          const key = `${dateObj.getMonth() + 1}/${dateObj.getDate()}`;\n\n          const mapShift = (shiftData) => {\n            if (!shiftData) return { employees: [], scheduleConfirmed: false };\n            return {\n              employees: shiftData.employees.map((e) => e.employee),\n              scheduleConfirmed: shiftData.scheduleConfirmed || false,\n            };\n          };\n\n          mappedSchedule[key] = {\n            AM: mapShift(item.AM),\n            PM: mapShift(item.PM),\n          };\n        });\n\n        setSchedule(mappedSchedule);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchSchedule();\n  }, []);\n\n  const handleChange = (dateStr, shift, selectedEmployees) => {\n    setSchedule((prev) => {\n      const dayData = prev[dateStr] || {\n        AM: { employees: [], scheduleConfirmed: false },\n        PM: { employees: [], scheduleConfirmed: false },\n      };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: { ...dayData[shift], employees: selectedEmployees },\n        },\n      };\n    });\n  };\n\n  const handleEdit = (dateStr, shift) => {\n    setSchedule((prev) => {\n      const dayData = prev[dateStr] || {};\n      const shiftData = dayData[shift] || { employees: [] };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: { ...shiftData, scheduleConfirmed: false },\n        },\n      };\n    });\n  };\n\n  const handleConfirm = async (dateStr, shift) => {\n    setSchedule((prev) => {\n      const dayData = prev[dateStr] || {};\n      const shiftData = dayData[shift] || { employees: [] };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: { ...shiftData, scheduleConfirmed: true },\n        },\n      };\n    });\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const selectedEmployees = schedule[dateStr]?.[shift]?.employees || [];\n      const formattedEmployees = selectedEmployees.map((emp) => ({\n        employee: emp._id,\n        clockIn: null,\n        clockOut: null,\n      }));\n\n      await API.post(\n        \"/schedule/confirm\",\n        { date: dateStr, shift, employees: formattedEmployees },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n    } catch (err) {\n      console.error(\"Schedule confirm failed:\", err);\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center\">Scheduler</h2>\n      <div className=\"grid grid-cols-7 gap-4 text-center text-sm font-bold text-gray-1000 mb-4\">\n        {[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map((d) => (\n          <div key={d} className=\"py-3 bg-gray-100 rounded-md shadow-sm\">\n            {d}\n          </div>\n        ))}\n      </div>\n      <div className=\"grid grid-cols-7 gap-4 text-sm\">\n        {printedDays.map(({ dateObj }, index) => {\n          const dateStr = `${dateObj.getMonth() + 1}/${dateObj.getDate()}`;\n          const dayData = schedule[dateStr] || {};\n          return (\n            <ScheduleCell\n              key={index}\n              dateStr={dateStr}\n              dayData={dayData}\n              handleChange={handleChange}\n              handleConfirm={handleConfirm}\n              handleEdit={handleEdit}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}