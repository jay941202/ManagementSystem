{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/Scedule Components/ScheduleTableByEmp.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employees = [{\n  _id: 1,\n  name: \"Alice\"\n}, {\n  _id: 2,\n  name: \"Bob\"\n}, {\n  _id: 3,\n  name: \"Charlie\"\n}];\nconst generateWeekDates = startDate => {\n  const week = [];\n  for (let i = 0; i < 7; i++) {\n    const d = new Date(startDate);\n    d.setDate(d.getDate() + i);\n    week.push(d);\n  }\n  return week;\n};\nexport default function ScheduleTableByEmp() {\n  const today = new Date();\n  const todayDay = today.getDay();\n  const diffToMonday = todayDay === 0 ? -6 : 1 - todayDay;\n  const startDateObj = new Date(today);\n  startDateObj.setDate(today.getDate() + diffToMonday);\n  const weekDates = generateWeekDates(startDateObj);\n  const colTemplate = [\"minmax(120px, 1fr)\", \"minmax(80px, 1fr)\", \"minmax(100px, 1fr)\", ...Array(weekDates.length * 2).fill(\"minmax(60px, 1fr)\")].join(\" \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-auto border rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid border-b auto-rows-min\",\n      style: {\n        gridTemplateColumns: colTemplate\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 text-center font-bold row-span-2\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-1 text-center font-semibold col-span-2\",\n        children: `${date.getMonth() + 1}/${date.getDate()}`\n      }, date.toDateString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)), weekDates.map(date => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center text-xs\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center text-xs\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, date.toDateString() + \"-shift\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid border-t auto-rows-min\",\n      style: {\n        gridTemplateColumns: colTemplate\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 text-center\",\n        children: emp.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-1 text-center h-12\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-1 text-center h-12\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, emp._id + \"-\" + date.toDateString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))]\n    }, emp._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = ScheduleTableByEmp;\nvar _c;\n$RefreshReg$(_c, \"ScheduleTableByEmp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","employees","_id","name","generateWeekDates","startDate","week","i","d","Date","setDate","getDate","push","ScheduleTableByEmp","today","todayDay","getDay","diffToMonday","startDateObj","weekDates","colTemplate","Array","length","fill","join","className","children","style","gridTemplateColumns","fileName","_jsxFileName","lineNumber","columnNumber","map","date","getMonth","toDateString","Fragment","emp","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/Scedule Components/ScheduleTableByEmp.js"],"sourcesContent":["import React from \"react\";\n\nconst employees = [\n  { _id: 1, name: \"Alice\" },\n  { _id: 2, name: \"Bob\" },\n  { _id: 3, name: \"Charlie\" },\n];\n\nconst generateWeekDates = (startDate) => {\n  const week = [];\n  for (let i = 0; i < 7; i++) {\n    const d = new Date(startDate);\n    d.setDate(d.getDate() + i);\n    week.push(d);\n  }\n  return week;\n};\n\nexport default function ScheduleTableByEmp() {\n  const today = new Date();\n  const todayDay = today.getDay();\n  const diffToMonday = todayDay === 0 ? -6 : 1 - todayDay;\n\n  const startDateObj = new Date(today);\n  startDateObj.setDate(today.getDate() + diffToMonday);\n  const weekDates = generateWeekDates(startDateObj);\n\n  const colTemplate = [\n    \"minmax(120px, 1fr)\",\n    \"minmax(80px, 1fr)\",\n    \"minmax(100px, 1fr)\",\n    ...Array(weekDates.length * 2).fill(\"minmax(60px, 1fr)\"),\n  ].join(\" \");\n\n  return (\n    <div className=\"overflow-auto border rounded\">\n      <div\n        className=\"grid border-b auto-rows-min\"\n        style={{ gridTemplateColumns: colTemplate }}\n      >\n        <div className=\"border p-2 text-center font-bold row-span-2\">Name</div>\n\n        {weekDates.map((date) => (\n          <div\n            key={date.toDateString()}\n            className=\"border p-1 text-center font-semibold col-span-2\"\n          >\n            {`${date.getMonth() + 1}/${date.getDate()}`}\n          </div>\n        ))}\n\n        {weekDates.map((date) => (\n          <React.Fragment key={date.toDateString() + \"-shift\"}>\n            <div className=\"border text-center text-xs\">Open</div>\n            <div className=\"border text-center text-xs\">Close</div>\n          </React.Fragment>\n        ))}\n      </div>\n\n      {employees.map((emp) => (\n        <div\n          key={emp._id}\n          className=\"grid border-t auto-rows-min\"\n          style={{ gridTemplateColumns: colTemplate }}\n        >\n          <div className=\"border p-2 text-center\">{emp.name}</div>\n          {weekDates.map((date) => (\n            <React.Fragment key={emp._id + \"-\" + date.toDateString()}>\n              <div className=\"border p-1 text-center h-12\">AM</div>\n              <div className=\"border p-1 text-center h-12\">PM</div>\n            </React.Fragment>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}