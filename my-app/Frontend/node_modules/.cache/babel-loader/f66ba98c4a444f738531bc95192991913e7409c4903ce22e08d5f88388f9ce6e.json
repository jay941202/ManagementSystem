{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPAComponents/CPAEmployeeGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CPAEmployeeGrid({\n  employees,\n  scheduleData,\n  dateRange,\n  // now assumed to be array of \"MM/DD\" strings\n  onSummaryCalculated\n}) {\n  _s();\n  const colTemplate = [\"minmax(120px, 1fr)\", \"minmax(80px, 1fr)\", \"minmax(100px, 1fr)\", ...Array(dateRange.length * 4).fill(\"minmax(60px, 1fr)\")].join(\" \");\n  const calculateShiftValues = (shift, emp) => {\n    var _target$employee;\n    if (!(shift !== null && shift !== void 0 && shift.employees)) return {\n      hourly: 0,\n      tip: 0\n    };\n    const target = shift.employees.find(e => {\n      var _e$employee;\n      return String((_e$employee = e.employee) === null || _e$employee === void 0 ? void 0 : _e$employee._id) === String(emp._id);\n    });\n    if (!target || !target.clockIn || !target.clockOut) return {\n      hourly: 0,\n      tip: 0\n    };\n    const clockIn = new Date(target.clockIn);\n    const clockOut = new Date(target.clockOut);\n    if (isNaN(clockIn) || isNaN(clockOut)) return {\n      hourly: 0,\n      tip: 0\n    };\n    const hoursWorked = (clockOut - clockIn) / (1000 * 60 * 60);\n    const hourly = hoursWorked * emp.hourlyPay;\n    const totalTipPercentage = shift.employees.reduce((sum, e) => {\n      var _e$employee2;\n      return sum + (((_e$employee2 = e.employee) === null || _e$employee2 === void 0 ? void 0 : _e$employee2.TipPercentage) || 0);\n    }, 0);\n    const empPercentage = ((_target$employee = target.employee) === null || _target$employee === void 0 ? void 0 : _target$employee.TipPercentage) || 0;\n    const tip = totalTipPercentage > 0 ? empPercentage / totalTipPercentage * (shift.tip || 0) : 0;\n    return {\n      hourly: Number(hourly.toFixed(2)),\n      tip: Number(tip.toFixed(2))\n    };\n  };\n  useEffect(() => {\n    const summary = {};\n    employees.forEach(emp => {\n      let totalDays = 0;\n      let totalHourly = 0;\n      let totalTip = 0;\n      dateRange.forEach(key => {\n        var _scheduleData$key, _scheduleData$key2;\n        const shifts = [((_scheduleData$key = scheduleData[key]) === null || _scheduleData$key === void 0 ? void 0 : _scheduleData$key.AM) || {\n          employees: [],\n          tip: 0\n        }, ((_scheduleData$key2 = scheduleData[key]) === null || _scheduleData$key2 === void 0 ? void 0 : _scheduleData$key2.PM) || {\n          employees: [],\n          tip: 0\n        }];\n        shifts.forEach(shift => {\n          const target = shift.employees.find(e => {\n            var _e$employee3;\n            return String((_e$employee3 = e.employee) === null || _e$employee3 === void 0 ? void 0 : _e$employee3._id) === String(emp._id);\n          });\n          if (target) {\n            totalDays += 1;\n            const {\n              hourly,\n              tip\n            } = calculateShiftValues(shift, emp);\n            totalHourly += hourly;\n            totalTip += tip;\n          }\n        });\n      });\n      summary[emp._id] = {\n        totalDays,\n        totalHourly: totalHourly.toFixed(2),\n        totalTip: totalTip.toFixed(2)\n      };\n    });\n    onSummaryCalculated(summary);\n  }, [employees, scheduleData, dateRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-auto border rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid auto-rows-min border-b\",\n      style: {\n        gridTemplateColumns: colTemplate\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Hourly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Tax Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), dateRange.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-1 text-center font-semibold col-span-4\",\n        children: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)), dateRange.map((_, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center col-span-2 flex items-center justify-center\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center col-span-2 flex items-center justify-center\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, `open-close-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)), dateRange.map((_, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center flex items-center justify-center\",\n          children: \"Hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center flex items-center justify-center\",\n          children: \"Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center flex items-center justify-center\",\n          children: \"Hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center flex items-center justify-center\",\n          children: \"Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, `hourly-tip-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), employees.filter(emp => emp.Active).map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid auto-rows-min border-t\",\n      style: {\n        gridTemplateColumns: colTemplate\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.hourlyPay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.taxReport || \"W-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), dateRange.map(key => {\n        var _scheduleData$key3, _scheduleData$key4;\n        const shifts = [((_scheduleData$key3 = scheduleData[key]) === null || _scheduleData$key3 === void 0 ? void 0 : _scheduleData$key3.AM) || {\n          employees: [],\n          tip: 0\n        }, ((_scheduleData$key4 = scheduleData[key]) === null || _scheduleData$key4 === void 0 ? void 0 : _scheduleData$key4.PM) || {\n          employees: [],\n          tip: 0\n        }];\n        return shifts.map((shift, i) => {\n          const {\n            hourly,\n            tip\n          } = calculateShiftValues(shift, emp);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `border p-1 text-center ${hourly ? \"bg-twohas text-white\" : \"text-gray-700\"}`,\n              children: hourly || \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `border p-1 text-center ${tip ? \"bg-twohas text-white\" : \"text-gray-700\"}`,\n              children: tip || \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this)]\n          }, `${key}-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }, this);\n        });\n      })]\n    }, emp._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(CPAEmployeeGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CPAEmployeeGrid;\nvar _c;\n$RefreshReg$(_c, \"CPAEmployeeGrid\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CPAEmployeeGrid","employees","scheduleData","dateRange","onSummaryCalculated","_s","colTemplate","Array","length","fill","join","calculateShiftValues","shift","emp","_target$employee","hourly","tip","target","find","e","_e$employee","String","employee","_id","clockIn","clockOut","Date","isNaN","hoursWorked","hourlyPay","totalTipPercentage","reduce","sum","_e$employee2","TipPercentage","empPercentage","Number","toFixed","summary","forEach","totalDays","totalHourly","totalTip","key","_scheduleData$key","_scheduleData$key2","shifts","AM","PM","_e$employee3","className","children","style","gridTemplateColumns","fileName","_jsxFileName","lineNumber","columnNumber","map","_","idx","Fragment","filter","Active","name","taxReport","_scheduleData$key3","_scheduleData$key4","i","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPAComponents/CPAEmployeeGrid.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nexport default function CPAEmployeeGrid({\n  employees,\n  scheduleData,\n  dateRange, // now assumed to be array of \"MM/DD\" strings\n  onSummaryCalculated,\n}) {\n  const colTemplate = [\n    \"minmax(120px, 1fr)\",\n    \"minmax(80px, 1fr)\",\n    \"minmax(100px, 1fr)\",\n    ...Array(dateRange.length * 4).fill(\"minmax(60px, 1fr)\"),\n  ].join(\" \");\n\n  const calculateShiftValues = (shift, emp) => {\n    if (!shift?.employees) return { hourly: 0, tip: 0 };\n\n    const target = shift.employees.find(\n      (e) => String(e.employee?._id) === String(emp._id)\n    );\n    if (!target || !target.clockIn || !target.clockOut)\n      return { hourly: 0, tip: 0 };\n\n    const clockIn = new Date(target.clockIn);\n    const clockOut = new Date(target.clockOut);\n    if (isNaN(clockIn) || isNaN(clockOut)) return { hourly: 0, tip: 0 };\n\n    const hoursWorked = (clockOut - clockIn) / (1000 * 60 * 60);\n    const hourly = hoursWorked * emp.hourlyPay;\n\n    const totalTipPercentage = shift.employees.reduce(\n      (sum, e) => sum + (e.employee?.TipPercentage || 0),\n      0\n    );\n    const empPercentage = target.employee?.TipPercentage || 0;\n    const tip =\n      totalTipPercentage > 0\n        ? (empPercentage / totalTipPercentage) * (shift.tip || 0)\n        : 0;\n\n    return {\n      hourly: Number(hourly.toFixed(2)),\n      tip: Number(tip.toFixed(2)),\n    };\n  };\n\n  useEffect(() => {\n    const summary = {};\n    employees.forEach((emp) => {\n      let totalDays = 0;\n      let totalHourly = 0;\n      let totalTip = 0;\n\n      dateRange.forEach((key) => {\n        const shifts = [\n          scheduleData[key]?.AM || { employees: [], tip: 0 },\n          scheduleData[key]?.PM || { employees: [], tip: 0 },\n        ];\n\n        shifts.forEach((shift) => {\n          const target = shift.employees.find(\n            (e) => String(e.employee?._id) === String(emp._id)\n          );\n          if (target) {\n            totalDays += 1;\n            const { hourly, tip } = calculateShiftValues(shift, emp);\n            totalHourly += hourly;\n            totalTip += tip;\n          }\n        });\n      });\n\n      summary[emp._id] = {\n        totalDays,\n        totalHourly: totalHourly.toFixed(2),\n        totalTip: totalTip.toFixed(2),\n      };\n    });\n\n    onSummaryCalculated(summary);\n  }, [employees, scheduleData, dateRange]);\n\n  return (\n    <div className=\"overflow-auto border rounded\">\n      <div\n        className=\"grid auto-rows-min border-b\"\n        style={{ gridTemplateColumns: colTemplate }}\n      >\n        <div className=\"border p-2 row-span-3 font-bold text-center\">Name</div>\n        <div className=\"border p-2 row-span-3 font-bold text-center\">\n          Hourly\n        </div>\n        <div className=\"border p-2 row-span-3 font-bold text-center\">\n          Tax Report\n        </div>\n\n        {dateRange.map((key) => (\n          <div\n            key={key}\n            className=\"border p-1 text-center font-semibold col-span-4\"\n          >\n            {key}\n          </div>\n        ))}\n\n        {dateRange.map((_, idx) => (\n          <React.Fragment key={`open-close-${idx}`}>\n            <div className=\"border text-center col-span-2 flex items-center justify-center\">\n              Open\n            </div>\n            <div className=\"border text-center col-span-2 flex items-center justify-center\">\n              Close\n            </div>\n          </React.Fragment>\n        ))}\n\n        {dateRange.map((_, idx) => (\n          <React.Fragment key={`hourly-tip-${idx}`}>\n            <div className=\"border text-center flex items-center justify-center\">\n              Hourly\n            </div>\n            <div className=\"border text-center flex items-center justify-center\">\n              Tip\n            </div>\n            <div className=\"border text-center flex items-center justify-center\">\n              Hourly\n            </div>\n            <div className=\"border text-center flex items-center justify-center\">\n              Tip\n            </div>\n          </React.Fragment>\n        ))}\n      </div>\n\n      {employees\n        .filter((emp) => emp.Active)\n        .map((emp) => (\n          <div\n            key={emp._id}\n            className=\"grid auto-rows-min border-t\"\n            style={{ gridTemplateColumns: colTemplate }}\n          >\n            <div className=\"border p-2 row-span-4 text-center\">{emp.name}</div>\n            <div className=\"border p-2 row-span-4 text-center\">\n              {emp.hourlyPay}\n            </div>\n            <div className=\"border p-2 row-span-4 text-center\">\n              {emp.taxReport || \"W-2\"}\n            </div>\n\n            {dateRange.map((key) => {\n              const shifts = [\n                scheduleData[key]?.AM || { employees: [], tip: 0 },\n                scheduleData[key]?.PM || { employees: [], tip: 0 },\n              ];\n\n              return shifts.map((shift, i) => {\n                const { hourly, tip } = calculateShiftValues(shift, emp);\n                return (\n                  <React.Fragment key={`${key}-${i}`}>\n                    <div\n                      className={`border p-1 text-center ${\n                        hourly ? \"bg-twohas text-white\" : \"text-gray-700\"\n                      }`}\n                    >\n                      {hourly || \"-\"}\n                    </div>\n                    <div\n                      className={`border p-1 text-center ${\n                        tip ? \"bg-twohas text-white\" : \"text-gray-700\"\n                      }`}\n                    >\n                      {tip || \"-\"}\n                    </div>\n                  </React.Fragment>\n                );\n              });\n            })}\n          </div>\n        ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}