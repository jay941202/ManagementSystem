{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ScheduleCell from \"./Scedule Components/ScheduleCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayDay = today.getDay();\n  const diffToMonday = todayDay - 1;\n  const startDate = todayDate + 7 - diffToMonday;\n  const printedDays = [];\n  for (let i = startDate; i < startDate + 14; i++) {\n    printedDays.push({\n      i\n    });\n  }\n  const [schedule, setSchedule] = useState({});\n  const handleChange = (dateStr, shift, selectedEmployees) => {\n    setSchedule(prev => {\n      const dayData = prev[dateStr] || {\n        AM: {\n          employees: [],\n          confirmed: false\n        },\n        PM: {\n          employees: [],\n          confirmed: false\n        }\n      };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...dayData[shift],\n            employees: selectedEmployees\n          }\n        }\n      };\n    });\n  };\n  const handleConfirm = (dateStr, shift) => {\n    setSchedule(prev => {\n      const dayData = prev[dateStr] || {};\n      const shiftData = dayData[shift] || {\n        employees: []\n      };\n      if (shiftData.employees.length === 0) return prev;\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...shiftData,\n            confirmed: true\n          }\n        }\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center\",\n      children: \"Make a Scedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-4 text-center text-sm font-bold text-gray-1000 mb-4\",\n      children: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-3 bg-gray-100 rounded-md shadow-sm\",\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-4 text-sm\",\n      children: calendarDays.map(({\n        day,\n        isCurrentMonth\n      }, index) => {\n        if (!day) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-64 min-w-[120px] bg-transparent border-none\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        }\n        const cellDate = new Date(isCurrentMonth ? year : month === 11 ? year + 1 : year, isCurrentMonth ? month : (month + 1) % 12, day);\n        const dateStr = `${cellDate.getFullYear()}-${String(cellDate.getMonth() + 1).padStart(2, \"0\")}-${String(day).padStart(2, \"0\")}`;\n        const dayData = schedule[dateStr] || {};\n        return /*#__PURE__*/_jsxDEV(ScheduleCell, {\n          dateStr: dateStr,\n          day: day,\n          dayData: dayData,\n          handleChange: handleChange,\n          handleConfirm: handleConfirm\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Schedule, \"ZWy0YSgC7yocF41nv7P2smapsBk=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","ScheduleCell","jsxDEV","_jsxDEV","Schedule","_s","today","Date","todayDate","getDate","todayDay","getDay","diffToMonday","startDate","printedDays","i","push","schedule","setSchedule","handleChange","dateStr","shift","selectedEmployees","prev","dayData","AM","employees","confirmed","PM","handleConfirm","shiftData","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","d","calendarDays","day","isCurrentMonth","index","cellDate","year","month","getFullYear","String","getMonth","padStart","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/Schedule.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ScheduleCell from \"./Scedule Components/ScheduleCell\";\n\nexport default function Schedule() {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayDay = today.getDay();\n  const diffToMonday = todayDay - 1;\n  const startDate = todayDate + 7 - diffToMonday;\n  const printedDays = [];\n  for (let i = startDate; i < startDate + 14; i++) {\n    printedDays.push({ i });\n  }\n\n  const [schedule, setSchedule] = useState({});\n\n  const handleChange = (dateStr, shift, selectedEmployees) => {\n    setSchedule((prev) => {\n      const dayData = prev[dateStr] || {\n        AM: { employees: [], confirmed: false },\n        PM: { employees: [], confirmed: false },\n      };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...dayData[shift],\n            employees: selectedEmployees,\n          },\n        },\n      };\n    });\n  };\n\n  const handleConfirm = (dateStr, shift) => {\n    setSchedule((prev) => {\n      const dayData = prev[dateStr] || {};\n      const shiftData = dayData[shift] || { employees: [] };\n\n      if (shiftData.employees.length === 0) return prev;\n\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...shiftData,\n            confirmed: true,\n          },\n        },\n      };\n    });\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center\">Make a Scedule</h2>\n      <div className=\"grid grid-cols-7 gap-4 text-center text-sm font-bold text-gray-1000 mb-4\">\n        {[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((d) => (\n          <div key={d} className=\"py-3 bg-gray-100 rounded-md shadow-sm\">\n            {d}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-7 gap-4 text-sm\">\n        {calendarDays.map(({ day, isCurrentMonth }, index) => {\n          if (!day) {\n            return (\n              <div\n                key={index}\n                className=\"h-64 min-w-[120px] bg-transparent border-none\"\n              />\n            );\n          }\n\n          const cellDate = new Date(\n            isCurrentMonth ? year : month === 11 ? year + 1 : year,\n            isCurrentMonth ? month : (month + 1) % 12,\n            day\n          );\n\n          const dateStr = `${cellDate.getFullYear()}-${String(\n            cellDate.getMonth() + 1\n          ).padStart(2, \"0\")}-${String(day).padStart(2, \"0\")}`;\n\n          const dayData = schedule[dateStr] || {};\n\n          return (\n            <ScheduleCell\n              key={index}\n              dateStr={dateStr}\n              day={day}\n              dayData={dayData}\n              handleChange={handleChange}\n              handleConfirm={handleConfirm}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}