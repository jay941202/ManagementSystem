{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPAComponents/CPAEmployeeGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CPAEmployeeGrid({\n  employees,\n  scheduleData,\n  dateRange,\n  onSummaryCalculated\n}) {\n  _s();\n  const colTemplate = [\"minmax(120px, 1fr)\", \"minmax(80px, 1fr)\", \"minmax(100px, 1fr)\", ...Array(dateRange.length * 4).fill(\"minmax(60px, 1fr)\")].join(\" \");\n  useEffect(() => {\n    const summary = {};\n    employees.forEach(emp => {\n      let totalDays = 0;\n      let totalHourly = 0;\n      let totalTip = 0;\n      dateRange.forEach(date => {\n        var _scheduleData$key, _scheduleData$key2;\n        const key = `${date.getMonth() + 1}/${date.getDate()}`;\n        const am = ((_scheduleData$key = scheduleData[key]) === null || _scheduleData$key === void 0 ? void 0 : _scheduleData$key.AM) || {};\n        const pm = ((_scheduleData$key2 = scheduleData[key]) === null || _scheduleData$key2 === void 0 ? void 0 : _scheduleData$key2.PM) || {};\n        [am, pm].forEach(shift => {\n          var _shift$employees;\n          const target = (_shift$employees = shift.employees) === null || _shift$employees === void 0 ? void 0 : _shift$employees.find(e => {\n            var _e$employee;\n            return String((_e$employee = e.employee) === null || _e$employee === void 0 ? void 0 : _e$employee._id) === String(emp._id);\n          });\n          if (target) {\n            var _shift$employees2, _target$employee;\n            totalDays += 1;\n            if (target.clockIn && target.clockOut) {\n              const hours = (new Date(target.clockOut) - new Date(target.clockIn)) / (1000 * 60 * 60);\n              totalHourly += hours * emp.hourlyPay;\n            }\n            const totalTipPercentage = (_shift$employees2 = shift.employees) === null || _shift$employees2 === void 0 ? void 0 : _shift$employees2.reduce((sum, e) => {\n              var _e$employee2;\n              return sum + (((_e$employee2 = e.employee) === null || _e$employee2 === void 0 ? void 0 : _e$employee2.TipPercentage) || 0);\n            }, 0);\n            const empPercentage = ((_target$employee = target.employee) === null || _target$employee === void 0 ? void 0 : _target$employee.TipPercentage) || 0;\n            const tipShare = totalTipPercentage > 0 ? empPercentage / totalTipPercentage * (shift.tip || 0) : 0;\n            totalTip += tipShare;\n          }\n        });\n      });\n      summary[emp._id] = {\n        totalDays,\n        totalHourly: totalHourly.toFixed(2),\n        totalTip: totalTip.toFixed(2)\n      };\n    });\n    if (onSummaryCalculated) onSummaryCalculated(summary);\n  }, [employees, scheduleData, dateRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-auto border rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid auto-rows-min border-b\",\n      style: {\n        gridTemplateColumns: colTemplate\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Hourly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Tax Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), dateRange.map((date, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-1 text-center font-semibold col-span-4\",\n        children: `${date.getMonth() + 1}/${date.getDate()}`\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)), dateRange.map((_, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center col-span-2 flex items-center justify-center\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center col-span-2 flex items-center justify-center\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)), dateRange.map((_, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center flex items-center justify-center\",\n          children: \"Hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center flex items-center justify-center\",\n          children: \"Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center flex items-center justify-center\",\n          children: \"Hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center flex items-center justify-center\",\n          children: \"Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid auto-rows-min border-t\",\n      style: {\n        gridTemplateColumns: colTemplate\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.hourlyPay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.taxReport || \"W-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), dateRange.map((date, idx) => {\n        var _scheduleData$key3, _scheduleData$key4;\n        const key = `${date.getMonth() + 1}/${date.getDate()}`;\n        const am = ((_scheduleData$key3 = scheduleData[key]) === null || _scheduleData$key3 === void 0 ? void 0 : _scheduleData$key3.AM) || {};\n        const pm = ((_scheduleData$key4 = scheduleData[key]) === null || _scheduleData$key4 === void 0 ? void 0 : _scheduleData$key4.PM) || {};\n        const tipCal = (shift, emp) => {\n          const totalTip = shift.tip || 0;\n          const employees = shift.employees || [];\n          const target = employees.find(e => {\n            var _e$employee3;\n            return String((_e$employee3 = e.employee) === null || _e$employee3 === void 0 ? void 0 : _e$employee3._id) === String(emp._id);\n          });\n          if (!target) return 0;\n          const totalTipPercentage = employees.reduce((total, e) => {\n            var _e$employee4;\n            return total + (((_e$employee4 = e.employee) === null || _e$employee4 === void 0 ? void 0 : _e$employee4.TipPercentage) || 0);\n          }, 0);\n          const empPercentage = emp.TipPercentage;\n          return totalTipPercentage > 0 ? (empPercentage / totalTipPercentage * totalTip).toFixed(2) : 0;\n        };\n        const hourlyCal = (shift, emp) => {\n          if (!(shift !== null && shift !== void 0 && shift.employees) || !Array.isArray(shift.employees)) return 0;\n          const target = shift.employees.find(e => {\n            var _e$employee5;\n            return String((_e$employee5 = e.employee) === null || _e$employee5 === void 0 ? void 0 : _e$employee5._id) === String(emp._id);\n          });\n          if (!target || !target.clockIn || !target.clockOut) return 0;\n          const startTime = new Date(target.clockIn);\n          const outTime = new Date(target.clockOut);\n          return (outTime - startTime) / (1000 * 60 * 60) * emp.hourlyPay;\n        };\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-1 text-center\",\n            children: hourlyCal(am, emp) || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-1 text-center\",\n            children: tipCal(am, emp) || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-1 text-center\",\n            children: hourlyCal(pm, emp) || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-1 text-center\",\n            children: tipCal(pm, emp) || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this);\n      })]\n    }, emp._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(CPAEmployeeGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CPAEmployeeGrid;\nvar _c;\n$RefreshReg$(_c, \"CPAEmployeeGrid\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CPAEmployeeGrid","employees","scheduleData","dateRange","onSummaryCalculated","_s","colTemplate","Array","length","fill","join","summary","forEach","emp","totalDays","totalHourly","totalTip","date","_scheduleData$key","_scheduleData$key2","key","getMonth","getDate","am","AM","pm","PM","shift","_shift$employees","target","find","e","_e$employee","String","employee","_id","_shift$employees2","_target$employee","clockIn","clockOut","hours","Date","hourlyPay","totalTipPercentage","reduce","sum","_e$employee2","TipPercentage","empPercentage","tipShare","tip","toFixed","className","children","style","gridTemplateColumns","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","_","Fragment","name","taxReport","_scheduleData$key3","_scheduleData$key4","tipCal","_e$employee3","total","_e$employee4","hourlyCal","isArray","_e$employee5","startTime","outTime","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPAComponents/CPAEmployeeGrid.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nexport default function CPAEmployeeGrid({\n  employees,\n  scheduleData,\n  dateRange,\n  onSummaryCalculated,\n}) {\n  const colTemplate = [\n    \"minmax(120px, 1fr)\",\n    \"minmax(80px, 1fr)\",\n    \"minmax(100px, 1fr)\",\n    ...Array(dateRange.length * 4).fill(\"minmax(60px, 1fr)\"),\n  ].join(\" \");\n\n  useEffect(() => {\n    const summary = {};\n    employees.forEach((emp) => {\n      let totalDays = 0;\n      let totalHourly = 0;\n      let totalTip = 0;\n\n      dateRange.forEach((date) => {\n        const key = `${date.getMonth() + 1}/${date.getDate()}`;\n        const am = scheduleData[key]?.AM || {};\n        const pm = scheduleData[key]?.PM || {};\n\n        [am, pm].forEach((shift) => {\n          const target = shift.employees?.find(\n            (e) => String(e.employee?._id) === String(emp._id)\n          );\n          if (target) {\n            totalDays += 1;\n            if (target.clockIn && target.clockOut) {\n              const hours =\n                (new Date(target.clockOut) - new Date(target.clockIn)) /\n                (1000 * 60 * 60);\n              totalHourly += hours * emp.hourlyPay;\n            }\n            const totalTipPercentage = shift.employees?.reduce(\n              (sum, e) => sum + (e.employee?.TipPercentage || 0),\n              0\n            );\n            const empPercentage = target.employee?.TipPercentage || 0;\n            const tipShare =\n              totalTipPercentage > 0\n                ? (empPercentage / totalTipPercentage) * (shift.tip || 0)\n                : 0;\n            totalTip += tipShare;\n          }\n        });\n      });\n\n      summary[emp._id] = {\n        totalDays,\n        totalHourly: totalHourly.toFixed(2),\n        totalTip: totalTip.toFixed(2),\n      };\n    });\n\n    if (onSummaryCalculated) onSummaryCalculated(summary);\n  }, [employees, scheduleData, dateRange]);\n\n  return (\n    <div className=\"overflow-auto border rounded\">\n      <div\n        className=\"grid auto-rows-min border-b\"\n        style={{ gridTemplateColumns: colTemplate }}\n      >\n        <div className=\"border p-2 row-span-3 font-bold text-center\">Name</div>\n        <div className=\"border p-2 row-span-3 font-bold text-center\">\n          Hourly\n        </div>\n        <div className=\"border p-2 row-span-3 font-bold text-center\">\n          Tax Report\n        </div>\n\n        {dateRange.map((date, idx) => (\n          <div\n            key={idx}\n            className=\"border p-1 text-center font-semibold col-span-4\"\n          >\n            {`${date.getMonth() + 1}/${date.getDate()}`}\n          </div>\n        ))}\n\n        {dateRange.map((_, idx) => (\n          <React.Fragment key={idx}>\n            <div className=\"border text-center col-span-2 flex items-center justify-center\">\n              AM\n            </div>\n            <div className=\"border text-center col-span-2 flex items-center justify-center\">\n              PM\n            </div>\n          </React.Fragment>\n        ))}\n\n        {dateRange.map((_, idx) => (\n          <React.Fragment key={idx}>\n            <div className=\"border text-center flex items-center justify-center\">\n              Hourly\n            </div>\n            <div className=\"border text-center flex items-center justify-center\">\n              Tip\n            </div>\n            <div className=\"border text-center flex items-center justify-center\">\n              Hourly\n            </div>\n            <div className=\"border text-center flex items-center justify-center\">\n              Tip\n            </div>\n          </React.Fragment>\n        ))}\n      </div>\n\n      {employees.map((emp) => (\n        <div\n          key={emp._id}\n          className=\"grid auto-rows-min border-t\"\n          style={{ gridTemplateColumns: colTemplate }}\n        >\n          <div className=\"border p-2 row-span-4 text-center\">{emp.name}</div>\n          <div className=\"border p-2 row-span-4 text-center\">\n            {emp.hourlyPay}\n          </div>\n          <div className=\"border p-2 row-span-4 text-center\">\n            {emp.taxReport || \"W-2\"}\n          </div>\n\n          {dateRange.map((date, idx) => {\n            const key = `${date.getMonth() + 1}/${date.getDate()}`;\n            const am = scheduleData[key]?.AM || {};\n            const pm = scheduleData[key]?.PM || {};\n\n            const tipCal = (shift, emp) => {\n              const totalTip = shift.tip || 0;\n              const employees = shift.employees || [];\n              const target = employees.find(\n                (e) => String(e.employee?._id) === String(emp._id)\n              );\n              if (!target) return 0;\n              const totalTipPercentage = employees.reduce(\n                (total, e) => total + (e.employee?.TipPercentage || 0),\n                0\n              );\n              const empPercentage = emp.TipPercentage;\n              return totalTipPercentage > 0\n                ? ((empPercentage / totalTipPercentage) * totalTip).toFixed(2)\n                : 0;\n            };\n\n            const hourlyCal = (shift, emp) => {\n              if (!shift?.employees || !Array.isArray(shift.employees))\n                return 0;\n              const target = shift.employees.find(\n                (e) => String(e.employee?._id) === String(emp._id)\n              );\n              if (!target || !target.clockIn || !target.clockOut) return 0;\n              const startTime = new Date(target.clockIn);\n              const outTime = new Date(target.clockOut);\n              return ((outTime - startTime) / (1000 * 60 * 60)) * emp.hourlyPay;\n            };\n\n            return (\n              <React.Fragment key={idx}>\n                <div className=\"border p-1 text-center\">\n                  {hourlyCal(am, emp) || 0}\n                </div>\n                <div className=\"border p-1 text-center\">\n                  {tipCal(am, emp) || 0}\n                </div>\n                <div className=\"border p-1 text-center\">\n                  {hourlyCal(pm, emp) || 0}\n                </div>\n                <div className=\"border p-1 text-center\">\n                  {tipCal(pm, emp) || 0}\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}