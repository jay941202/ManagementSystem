{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPAComponents/CPAEmployeeGrid.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CPAEmployeeGrid({\n  employees,\n  scheduleData,\n  dateRange\n}) {\n  const columns = [\"150px\", \"100px\", \"120px\", ...dateRange.map(() => \"80px\").flat()];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-auto border rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid auto-rows-min border-b\",\n      style: {\n        gridTemplateColumns: `150px 100px 120px repeat(${dateRange.length * 4}, 80px)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Hourly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-3 font-bold text-center\",\n        children: \"Tax Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), dateRange.map((date, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-1 text-center font-semibold col-span-4\",\n          children: `${date.getMonth() + 1}/${date.getDate()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)), dateRange.map((_, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center col-span-2\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center col-span-2\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)), dateRange.map((_, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center\",\n          children: \"Hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center\",\n          children: \"Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center\",\n          children: \"Hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border text-center\",\n          children: \"Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid auto-rows-min border-t\",\n      style: {\n        gridTemplateColumns: `150px 100px 120px repeat(${dateRange.length * 4}, 80px)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.hourlyPay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 row-span-4 text-center\",\n        children: emp.taxReport || \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), dateRange.map((date, idx) => {\n        var _scheduleData$emp$_id, _scheduleData$emp$_id2, _scheduleData$emp$_id3, _scheduleData$emp$_id4;\n        const key = `${date.getMonth() + 1}/${date.getDate()}`;\n        const am = ((_scheduleData$emp$_id = scheduleData[emp._id]) === null || _scheduleData$emp$_id === void 0 ? void 0 : (_scheduleData$emp$_id2 = _scheduleData$emp$_id[key]) === null || _scheduleData$emp$_id2 === void 0 ? void 0 : _scheduleData$emp$_id2.AM) || {};\n        const pm = ((_scheduleData$emp$_id3 = scheduleData[emp._id]) === null || _scheduleData$emp$_id3 === void 0 ? void 0 : (_scheduleData$emp$_id4 = _scheduleData$emp$_id3[key]) === null || _scheduleData$emp$_id4 === void 0 ? void 0 : _scheduleData$emp$_id4.PM) || {};\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-1 text-center\",\n            children: am.hourly || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-1 text-center\",\n            children: am.tip || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-1 text-center\",\n            children: pm.hourly || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-1 text-center\",\n            children: pm.tip || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this);\n      })]\n    }, emp._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = CPAEmployeeGrid;\nvar _c;\n$RefreshReg$(_c, \"CPAEmployeeGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CPAEmployeeGrid","employees","scheduleData","dateRange","columns","map","flat","className","children","style","gridTemplateColumns","length","fileName","_jsxFileName","lineNumber","columnNumber","date","idx","Fragment","getMonth","getDate","_","emp","name","hourlyPay","taxReport","_scheduleData$emp$_id","_scheduleData$emp$_id2","_scheduleData$emp$_id3","_scheduleData$emp$_id4","key","am","_id","AM","pm","PM","hourly","tip","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPAComponents/CPAEmployeeGrid.js"],"sourcesContent":["import React from \"react\";\n\nexport default function CPAEmployeeGrid({\n  employees,\n  scheduleData,\n  dateRange,\n}) {\n  const columns = [\n    \"150px\",\n    \"100px\",\n    \"120px\",\n    ...dateRange.map(() => \"80px\").flat(),\n  ];\n  return (\n    <div className=\"overflow-auto border rounded\">\n      <div\n        className=\"grid auto-rows-min border-b\"\n        style={{\n          gridTemplateColumns: `150px 100px 120px repeat(${\n            dateRange.length * 4\n          }, 80px)`,\n        }}\n      >\n        <div className=\"border p-2 row-span-3 font-bold text-center\">Name</div>\n        <div className=\"border p-2 row-span-3 font-bold text-center\">\n          Hourly\n        </div>\n        <div className=\"border p-2 row-span-3 font-bold text-center\">\n          Tax Report\n        </div>\n\n        {dateRange.map((date, idx) => (\n          <React.Fragment key={idx}>\n            <div className=\"border p-1 text-center font-semibold col-span-4\">\n              {`${date.getMonth() + 1}/${date.getDate()}`}\n            </div>\n          </React.Fragment>\n        ))}\n\n        {dateRange.map((_, idx) => (\n          <React.Fragment key={idx}>\n            <div className=\"border text-center col-span-2\">AM</div>\n            <div className=\"border text-center col-span-2\">PM</div>\n          </React.Fragment>\n        ))}\n\n        {dateRange.map((_, idx) => (\n          <React.Fragment key={idx}>\n            <div className=\"border text-center\">Hourly</div>\n            <div className=\"border text-center\">Tip</div>\n            <div className=\"border text-center\">Hourly</div>\n            <div className=\"border text-center\">Tip</div>\n          </React.Fragment>\n        ))}\n      </div>\n\n      {employees.map((emp) => (\n        <div\n          key={emp._id}\n          className=\"grid auto-rows-min border-t\"\n          style={{\n            gridTemplateColumns: `150px 100px 120px repeat(${\n              dateRange.length * 4\n            }, 80px)`,\n          }}\n        >\n          <div className=\"border p-2 row-span-4 text-center\">{emp.name}</div>\n          <div className=\"border p-2 row-span-4 text-center\">\n            {emp.hourlyPay}\n          </div>\n          <div className=\"border p-2 row-span-4 text-center\">\n            {emp.taxReport || \"Pending\"}\n          </div>\n\n          {dateRange.map((date, idx) => {\n            const key = `${date.getMonth() + 1}/${date.getDate()}`;\n            const am = scheduleData[emp._id]?.[key]?.AM || {};\n            const pm = scheduleData[emp._id]?.[key]?.PM || {};\n            return (\n              <React.Fragment key={idx}>\n                <div className=\"border p-1 text-center\">{am.hourly || 0}</div>\n                <div className=\"border p-1 text-center\">{am.tip || 0}</div>\n                <div className=\"border p-1 text-center\">{pm.hourly || 0}</div>\n                <div className=\"border p-1 text-center\">{pm.tip || 0}</div>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}