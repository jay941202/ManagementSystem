{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPAComponents/CPAEmployeeGrid.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CPAEmployeeGrid({\n  employees,\n  scheduleData,\n  dateRange\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-auto border rounded\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-max border-collapse table-auto w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-2 py-1 text-left row-span-3\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-2 py-1 text-left row-span-3\",\n            children: \"Hourly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-2 py-1 text-left row-span-3\",\n            children: \"Tax Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), dateRange.map((date, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-2 py-1 text-center\",\n            colSpan: 4,\n            children: `${date.getMonth() + 1}/${date.getDate()}`\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: dateRange.map((_, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border text-center\",\n              colSpan: 2,\n              children: \"AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border text-center\",\n              colSpan: 2,\n              children: \"PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: dateRange.map((_, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border text-center\",\n              children: \"Hourly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border text-center\",\n              children: \"Tip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border text-center\",\n              children: \"Hourly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border text-center\",\n              children: \"Tip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-2 py-1\",\n            children: emp.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-2 py-1\",\n            children: emp.hourlyPay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-2 py-1\",\n            children: emp.taxReport || \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), dateRange.map((date, idx) => {\n            var _scheduleData$emp$_id, _scheduleData$emp$_id2, _scheduleData$emp$_id3, _scheduleData$emp$_id4;\n            const key = `${date.getMonth() + 1}/${date.getDate()}`;\n            const am = ((_scheduleData$emp$_id = scheduleData[emp._id]) === null || _scheduleData$emp$_id === void 0 ? void 0 : (_scheduleData$emp$_id2 = _scheduleData$emp$_id[key]) === null || _scheduleData$emp$_id2 === void 0 ? void 0 : _scheduleData$emp$_id2.AM) || {};\n            const pm = ((_scheduleData$emp$_id3 = scheduleData[emp._id]) === null || _scheduleData$emp$_id3 === void 0 ? void 0 : (_scheduleData$emp$_id4 = _scheduleData$emp$_id3[key]) === null || _scheduleData$emp$_id4 === void 0 ? void 0 : _scheduleData$emp$_id4.PM) || {};\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1 text-center\",\n                children: am.hourly || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1 text-center\",\n                children: am.tip || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1 text-center\",\n                children: pm.hourly || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1 text-center\",\n                children: pm.tip || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this);\n          })]\n        }, emp._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = CPAEmployeeGrid;\nvar _c;\n$RefreshReg$(_c, \"CPAEmployeeGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CPAEmployeeGrid","employees","scheduleData","dateRange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","date","idx","colSpan","getMonth","getDate","_","Fragment","emp","name","hourlyPay","taxReport","_scheduleData$emp$_id","_scheduleData$emp$_id2","_scheduleData$emp$_id3","_scheduleData$emp$_id4","key","am","_id","AM","pm","PM","hourly","tip","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/CPAComponents/CPAEmployeeGrid.js"],"sourcesContent":["import React from \"react\";\n\nexport default function CPAEmployeeGrid({\n  employees,\n  scheduleData,\n  dateRange,\n}) {\n  return (\n    <div className=\"overflow-auto border rounded\">\n      <table className=\"min-w-max border-collapse table-auto w-full\">\n        <thead>\n          <tr>\n            <th className=\"border px-2 py-1 text-left row-span-3\">Name</th>\n            <th className=\"border px-2 py-1 text-left row-span-3\">Hourly</th>\n            <th className=\"border px-2 py-1 text-left row-span-3\">\n              Tax Report\n            </th>\n            {dateRange.map((date, idx) => (\n              <th\n                key={idx}\n                className=\"border px-2 py-1 text-center\"\n                colSpan={4}\n              >\n                {`${date.getMonth() + 1}/${date.getDate()}`}\n              </th>\n            ))}\n          </tr>\n          <tr>\n            {dateRange.map((_, idx) => (\n              <React.Fragment key={idx}>\n                <th className=\"border text-center\" colSpan={2}>\n                  AM\n                </th>\n                <th className=\"border text-center\" colSpan={2}>\n                  PM\n                </th>\n              </React.Fragment>\n            ))}\n          </tr>\n          <tr>\n            {dateRange.map((_, idx) => (\n              <React.Fragment key={idx}>\n                <th className=\"border text-center\">Hourly</th>\n                <th className=\"border text-center\">Tip</th>\n                <th className=\"border text-center\">Hourly</th>\n                <th className=\"border text-center\">Tip</th>\n              </React.Fragment>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((emp) => (\n            <tr key={emp._id}>\n              <td className=\"border px-2 py-1\">{emp.name}</td>\n              <td className=\"border px-2 py-1\">{emp.hourlyPay}</td>\n              <td className=\"border px-2 py-1\">{emp.taxReport || \"Pending\"}</td>\n              {dateRange.map((date, idx) => {\n                const key = `${date.getMonth() + 1}/${date.getDate()}`;\n                const am = scheduleData[emp._id]?.[key]?.AM || {};\n                const pm = scheduleData[emp._id]?.[key]?.PM || {};\n                return (\n                  <React.Fragment key={idx}>\n                    <td className=\"border px-2 py-1 text-center\">\n                      {am.hourly || 0}\n                    </td>\n                    <td className=\"border px-2 py-1 text-center\">\n                      {am.tip || 0}\n                    </td>\n                    <td className=\"border px-2 py-1 text-center\">\n                      {pm.hourly || 0}\n                    </td>\n                    <td className=\"border px-2 py-1 text-center\">\n                      {pm.tip || 0}\n                    </td>\n                  </React.Fragment>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}