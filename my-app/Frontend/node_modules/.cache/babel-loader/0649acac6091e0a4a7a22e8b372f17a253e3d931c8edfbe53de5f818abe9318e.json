{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Capture/CaptureTable.js\";\nimport React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CaptureTable({\n  tableRef\n}) {\n  const handleCopyToClipboard = async () => {\n    if (!tableRef.current) return;\n    try {\n      const canvas = await html2canvas(tableRef.current);\n      canvas.toBlob(async blob => {\n        if (!blob) return;\n        await navigator.clipboard.write([new window.ClipboardItem({\n          \"image/png\": blob\n        })]);\n        alert(\"Table copied to clipboard!\");\n      });\n    } catch (err) {\n      console.error(\"Failed to copy table:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleCopyToClipboard,\n    className: \"px-4 py-2 bg-twohas hover:bg-gray-400 text-white rounded\",\n    children: \"Copy Table as Image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = CaptureTable;\nvar _c;\n$RefreshReg$(_c, \"CaptureTable\");","map":{"version":3,"names":["React","html2canvas","jsxDEV","_jsxDEV","CaptureTable","tableRef","handleCopyToClipboard","current","canvas","toBlob","blob","navigator","clipboard","write","window","ClipboardItem","alert","err","console","error","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Capture/CaptureTable.js"],"sourcesContent":["import React from \"react\";\nimport html2canvas from \"html2canvas\";\n\nexport default function CaptureTable({ tableRef }) {\n  const handleCopyToClipboard = async () => {\n    if (!tableRef.current) return;\n\n    try {\n      const canvas = await html2canvas(tableRef.current);\n      canvas.toBlob(async (blob) => {\n        if (!blob) return;\n        await navigator.clipboard.write([\n          new window.ClipboardItem({ \"image/png\": blob }),\n        ]);\n        alert(\"Table copied to clipboard!\");\n      });\n    } catch (err) {\n      console.error(\"Failed to copy table:\", err);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleCopyToClipboard}\n      className=\"px-4 py-2 bg-twohas hover:bg-gray-400 text-white rounded\"\n    >\n      Copy Table as Image\n    </button>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACjD,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI,CAACD,QAAQ,CAACE,OAAO,EAAE;IAEvB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMP,WAAW,CAACI,QAAQ,CAACE,OAAO,CAAC;MAClDC,MAAM,CAACC,MAAM,CAAC,MAAOC,IAAI,IAAK;QAC5B,IAAI,CAACA,IAAI,EAAE;QACX,MAAMC,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,CAC9B,IAAIC,MAAM,CAACC,aAAa,CAAC;UAAE,WAAW,EAAEL;QAAK,CAAC,CAAC,CAChD,CAAC;QACFM,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC7C;EACF,CAAC;EAED,oBACEd,OAAA;IACEiB,OAAO,EAAEd,qBAAsB;IAC/Be,SAAS,EAAC,0DAA0D;IAAAC,QAAA,EACrE;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACC,EAAA,GA1BuBvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}