{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ScheduleCell from \"./Scedule Components/ScheduleCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth();\n  const DateToday = today.getDay();\n  const diffToMonday = (DateToday + 6) % 7;\n  const lastDate = new Date(today.getTime() + (14 + diffToMonday) * 24 * 60 * 60 * 1000);\n  console.log(lastDate);\n  const totalCells = 42;\n  const calendarDays = [];\n  for (let i = 0; i < diffToMonday; i++) {\n    calendarDays.push({\n      day: null,\n      isCurrentMonth: false\n    });\n  }\n  for (let i = 1; i <= lastDate; i++) {\n    calendarDays.push({\n      day: i,\n      isCurrentMonth: true\n    });\n  }\n  const remaining = totalCells - calendarDays.length;\n  for (let i = 1; i <= remaining; i++) {\n    calendarDays.push({\n      day: i,\n      isCurrentMonth: false\n    });\n  }\n  const [schedule, setSchedule] = useState({});\n  const handleChange = (dateStr, shift, selectedEmployees) => {\n    setSchedule(prev => {\n      const dayData = prev[dateStr] || {\n        AM: {\n          employees: [],\n          confirmed: false\n        },\n        PM: {\n          employees: [],\n          confirmed: false\n        }\n      };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...dayData[shift],\n            employees: selectedEmployees\n          }\n        }\n      };\n    });\n  };\n  const handleConfirm = (dateStr, shift) => {\n    setSchedule(prev => {\n      const dayData = prev[dateStr] || {};\n      const shiftData = dayData[shift] || {\n        employees: []\n      };\n      if (shiftData.employees.length === 0) return prev;\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...shiftData,\n            confirmed: true\n          }\n        }\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center\",\n      children: \"Make a Scedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-4 text-center text-sm font-bold text-gray-1000 mb-4\",\n      children: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-3 bg-gray-100 rounded-md shadow-sm\",\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-4 text-sm\",\n      children: calendarDays.map(({\n        day,\n        isCurrentMonth\n      }, index) => {\n        if (!day) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-64 min-w-[120px] bg-transparent border-none\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this);\n        }\n        const cellDate = new Date(isCurrentMonth ? year : month === 11 ? year + 1 : year, isCurrentMonth ? month : (month + 1) % 12, day);\n        const dateStr = `${cellDate.getFullYear()}-${String(cellDate.getMonth() + 1).padStart(2, \"0\")}-${String(day).padStart(2, \"0\")}`;\n        const dayData = schedule[dateStr] || {};\n        return /*#__PURE__*/_jsxDEV(ScheduleCell, {\n          dateStr: dateStr,\n          day: day,\n          dayData: dayData,\n          handleChange: handleChange,\n          handleConfirm: handleConfirm\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Schedule, \"ZWy0YSgC7yocF41nv7P2smapsBk=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","ScheduleCell","jsxDEV","_jsxDEV","Schedule","_s","today","Date","year","getFullYear","month","getMonth","DateToday","getDay","diffToMonday","lastDate","getTime","console","log","totalCells","calendarDays","i","push","day","isCurrentMonth","remaining","length","schedule","setSchedule","handleChange","dateStr","shift","selectedEmployees","prev","dayData","AM","employees","confirmed","PM","handleConfirm","shiftData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","d","index","cellDate","String","padStart","_c","$RefreshReg$"],"sources":["/Users/jay/Desktop/Coding/ManagementSystem/my-app/Frontend/src/Components/AdminSubPages/Schedule.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ScheduleCell from \"./Scedule Components/ScheduleCell\";\n\nexport default function Schedule() {\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth();\n\n  const DateToday = today.getDay();\n  const diffToMonday = (DateToday + 6) % 7;\n\n  const lastDate = new Date(\n    today.getTime() + (14 + diffToMonday) * 24 * 60 * 60 * 1000\n  );\n\n  console.log(lastDate);\n\n  const totalCells = 42;\n  const calendarDays = [];\n\n  for (let i = 0; i < diffToMonday; i++) {\n    calendarDays.push({ day: null, isCurrentMonth: false });\n  }\n\n  for (let i = 1; i <= lastDate; i++) {\n    calendarDays.push({ day: i, isCurrentMonth: true });\n  }\n\n  const remaining = totalCells - calendarDays.length;\n  for (let i = 1; i <= remaining; i++) {\n    calendarDays.push({ day: i, isCurrentMonth: false });\n  }\n\n  const [schedule, setSchedule] = useState({});\n\n  const handleChange = (dateStr, shift, selectedEmployees) => {\n    setSchedule((prev) => {\n      const dayData = prev[dateStr] || {\n        AM: { employees: [], confirmed: false },\n        PM: { employees: [], confirmed: false },\n      };\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...dayData[shift],\n            employees: selectedEmployees,\n          },\n        },\n      };\n    });\n  };\n\n  const handleConfirm = (dateStr, shift) => {\n    setSchedule((prev) => {\n      const dayData = prev[dateStr] || {};\n      const shiftData = dayData[shift] || { employees: [] };\n\n      if (shiftData.employees.length === 0) return prev;\n\n      return {\n        ...prev,\n        [dateStr]: {\n          ...dayData,\n          [shift]: {\n            ...shiftData,\n            confirmed: true,\n          },\n        },\n      };\n    });\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center\">Make a Scedule</h2>\n      <div className=\"grid grid-cols-7 gap-4 text-center text-sm font-bold text-gray-1000 mb-4\">\n        {[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((d) => (\n          <div key={d} className=\"py-3 bg-gray-100 rounded-md shadow-sm\">\n            {d}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-7 gap-4 text-sm\">\n        {calendarDays.map(({ day, isCurrentMonth }, index) => {\n          if (!day) {\n            return (\n              <div\n                key={index}\n                className=\"h-64 min-w-[120px] bg-transparent border-none\"\n              />\n            );\n          }\n\n          const cellDate = new Date(\n            isCurrentMonth ? year : month === 11 ? year + 1 : year,\n            isCurrentMonth ? month : (month + 1) % 12,\n            day\n          );\n\n          const dateStr = `${cellDate.getFullYear()}-${String(\n            cellDate.getMonth() + 1\n          ).padStart(2, \"0\")}-${String(day).padStart(2, \"0\")}`;\n\n          const dayData = schedule[dateStr] || {};\n\n          return (\n            <ScheduleCell\n              key={index}\n              dateStr={dateStr}\n              day={day}\n              dayData={dayData}\n              handleChange={handleChange}\n              handleConfirm={handleConfirm}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}